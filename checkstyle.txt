Starting audit...
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:4:8: Unused import - javassist.compiler.ast.Pair. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:5:8: Unused import - net.sf.saxon.type.StringConverter. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:6:8: Unused import - org.checkerframework.checker.units.qual.A. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:10:8: Unused import - javax.sound.midi.Soundbank. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:11:8: Unused import - java.sql.SQLOutput. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:12:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:124:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:128:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getActionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getActionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:132:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:136:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:140:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getObjectType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getObjectType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:144:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSortType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSortType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:148:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCriteria' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCriteria' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:152:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:156:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:160:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:164:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getGrade' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getGrade' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:168:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSeasonNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSeasonNumber' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:172:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'doAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'doAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:9: Method length is 354 lines (max allowed is 150). [MethodLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:30: Parameter result should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:48: Parameter movies should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:74: Parameter users should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:181:97: Parameter shows should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:182:30: Parameter actors should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:183:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:184:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:185:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:186:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:188:33: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:189:37: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:192: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:200: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:210:24: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:211:21: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:212:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:216: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:220:24: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:221:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:223:25: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:224:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:231: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:233:62: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:236: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:238:62: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:241: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:249:25: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:250:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:255:41: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:258: Line is longer than 100 characters (found 139). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:260:48: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:263: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:265:41: '}' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:265:42: 'else' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:268: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:278:20: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:285:21: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:286:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:292:37: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:293:41: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:298:37: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:299:41: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:330:47: Name 'awards_pairs' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:334:29: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:335:37: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:342: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:350:37: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:351: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:357:33: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:370:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:385:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:396:32: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:397:47: Name 'description_pairs' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:400:29: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:401:33: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:402:37: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:405:37: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:406:41: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:408:45: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:414:33: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:430:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:432:29: '}' at column 29 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:442:28: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:443:25: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:444:47: Name 'ratings_pairs' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:446:29: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:448:37: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:452: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:453: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:475:29: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:487:28: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:490:47: Name 'ratings_pairs' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:492:33: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:493:37: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:494:41: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:495:45: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:496:49: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:497: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:497:53: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:498: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Action.java:538:9: Class 'Action' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:23:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:27:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:31:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'getFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'getFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:35:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'setFilmography' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'setFilmography' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:39:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'getAwards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'getAwards' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:43:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'getCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'getCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:47:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'setCareerDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'setCareerDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Actors.java:51:9: Class 'Actors' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Actors' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:8: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:8:19: Parameter title should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:8:33: Parameter year should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:8:43: Parameter cast should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:8:67: Parameter genres should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:8:93: Parameter duration should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Movies.java:13:5: Class 'Movies' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movies' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:4:19: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:5:19: Variable 'value' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:7:12: Parameter n should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:7:22: Parameter v should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:12:38: Variable 'ratingCompareASC' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:14:28: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:14:39: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:19:38: Variable 'ratingCompareDES' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:21:28: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:21:39: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:26:38: Variable 'nameCompare' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:28:28: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:28:39: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:33:38: Variable 'nameCompareDesc' must be private and have accessor methods. [VisibilityModifier]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:35:28: Parameter o1 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:35:39: Parameter o2 should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:40:5: Class 'MyPair' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MyPair' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:42:26: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:43:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Tema-POO-2020\.\src\Classes\MyPair.java:44:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Season.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:11:18: Parameter title should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:11:32: Parameter year should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:11:42: Parameter cast should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:11:66: Parameter genres should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:19:5: Class 'Shows' looks like designed for extension (can be subclassed), but the method 'getNumberOfSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Shows' final or making the method 'getNumberOfSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:22:5: Class 'Shows' looks like designed for extension (can be subclassed), but the method 'calculateRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Shows' final or making the method 'calculateRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Shows.java:35:5: Class 'Shows' looks like designed for extension (can be subclassed), but the method 'getSeasons' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Shows' final or making the method 'getSeasons' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:3:8: Unused import - entertainment.Season. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:7:8: Unused import - java.util.List. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:16:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:31:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getUsername' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getUsername' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:35:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:39:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscriptionType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscriptionType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:43:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'getFavoriteMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getFavoriteMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:47:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'addMovieToFavorite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'addMovieToFavorite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:47:36: Parameter movie should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:51:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'view' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'view' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:51:22: Parameter movie should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:52:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:60:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'giveRatingMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'giveRatingMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:60:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:60:32: Parameter video should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:60:46: Parameter rating should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:61:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:62:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:73:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'giveRatingShow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'giveRatingShow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:73:31: Parameter video should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:73:44: Parameter rating should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:73:59: Parameter seasonNumber should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:74:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:75:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:79:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] D:\Tema-POO-2020\.\src\Classes\User.java:87:9: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:1:9: Name 'Classes' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:11:21: Parameter title should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:11:35: Parameter year should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:11:45: Parameter cast should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:11:69: Parameter genres should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:19:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getTitle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getTitle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:23:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:27:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getCast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getCast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:31:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:35:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:43:5: Class 'Video' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Video' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:43:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\Classes\Video.java:43:27: Parameter r should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:31:42: '{' at column 42 should have line break after. [LeftCurly]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:31:42: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:31:43: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:31:57: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:31:58: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\fileio\MovieInputData.java:33:27: Parameter r should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\SerialInputData.java:6:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:61:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:61:36: Parameter movie should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:65:22: Parameter movie should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:66:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:73:33: Parameter video should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:73:55: Parameter rating should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:74:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:75:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:82:32: Parameter video should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:82:55: Parameter ratings should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:82:68: 'ratings' hides a field. [HiddenField]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:82:77: Parameter s should be final. [FinalParameters]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:83:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:84:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\fileio\UserInputData.java:85:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:3:15: Using the '.*' form of import should be avoided - Classes.*. [AvoidStarImport]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:7:14: Using the '.*' form of import should be avoided - fileio.*. [AvoidStarImport]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:8:8: Unused import - net.sf.saxon.expr.instruct.Actor. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:9:8: Unused import - org.checkerframework.checker.units.qual.A. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:11:8: Unused import - org.json.simple.JSONObject. [UnusedImports]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:66: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:66:82: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:67: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:67:61: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:67:89: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:69:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:71: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:74:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:76: Line is longer than 100 characters (found 116). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:79:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:81: Line is longer than 100 characters (found 136). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:84:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:86: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:89:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:91:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:92: Line is longer than 100 characters (found 127). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:95:20: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:96: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] D:\Tema-POO-2020\.\src\main\Main.java:100: Line is longer than 100 characters (found 128). [LineLength]
Audit done.
Checkstyle ends with 248 errors.
